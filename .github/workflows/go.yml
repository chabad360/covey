name: Tests and Analasis

on:
  push:
  pull_request:

jobs:
  cache:
    name: Build Cache
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15

      - name: Check out code
        uses: actions/checkout@v2
        
      - uses: actions/cache@v2
        with:
          path: |
            ~/go
            ~/.cache/go-build
          #  ~/Library/Caches/go-build
          #  %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-
            
      - name: Get dependencies
        run: |
          go get github.com/t-yuki/gocover-cobertura github.com/omeid/go-resources/cmd/resources github.com/traefik/yaegi/cmd/yaegi
          go mod download

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15

      - name: Check out code
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/go
            ~/.cache/go-build
          #  ~/Library/Caches/go-build
          #  %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-

      - name: Pack assets
        run: resources -declare -package=asset -output=asset/asset.go -tag="!live" -trim assets/ ./assets/*

      - name: Test
        if: always()
        run: go test -trimpath -v -tags=insecure -coverprofile=coverage.txt -json -covermode count `go list ./... | grep -v test` > test.json

      - name: Provide annotations from test
        if: always()
        uses: guyarb/golang-test-annotations@v0.3.0

#       - name: Upload coverage
#         if: always()
#         env:
#           CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
#         run: |
#           gocover-cobertura < coverage.txt > coverage.xml
#           bash <(curl -Ls https://coverage.codacy.com/get.sh) \
#             report --language Go --force-language -r coverage.xml
      - name: Upload coverage
        uses: brpaz/godacov-action@v1.1.1
        with:
          reportPath: 'coverage.txt'
          codacyToken: ${{ secrets.CODACY_PROJECT_TOKEN }}
          commitId: ${{ github.sha }}

  golangci:
    name: GolangCI
    runs-on: ubuntu-latest

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.35
          only-new-issues: true

  fossa:
    name: Fossa
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/go
            ~/.cache/go-build
          #  ~/Library/Caches/go-build
          #  %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-

      - name: Fossa Action
        uses: fossa-contrib/fossa-action@v1.1.3
        with:
          fossa-api-key: ${{ secrets.FOSSA_CLI_TOKEN }}

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
          
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: 'go'
        
      - uses: actions/cache@v2
        with:
          path: |
            ~/go
            ~/.cache/go-build
          #  ~/Library/Caches/go-build
          #  %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-
        
      - name: Build 
        run: |
          go generate
          go build github.com/chabad360/covey
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
